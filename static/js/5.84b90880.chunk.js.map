{"version":3,"sources":["algos/tremaux.js"],"names":["dfs","initialize","ctx","walker","mazeConfig","this","direction","end","x","y","visitedStackX","visitedStackY","backTracking","step","startingDirection","backtrackWithTremaux","moveWithTremaux","isSolved","solve","MazePathController","clearCanvas","drawPathFromStack"],"mappings":"+HAAA,mBAEMA,EAAM,CACRC,WAAY,SAAUC,EAAKC,EAAQC,GAC/BC,KAAKF,OAASA,EACdE,KAAKC,UAAY,EAEjBD,KAAKE,IAAM,CAACC,EAAGJ,EAAWG,IAAKE,EAAGL,EAAWG,KAC7CF,KAAKD,WAAaA,EAClBC,KAAKH,IAAMA,EACXG,KAAKK,cAAgB,GACrBL,KAAKM,cAAgB,GACrBN,KAAKO,cAAe,GAExBC,KAAM,WACF,IAAIC,EAAoBT,KAAKC,UAE7B,GAAID,KAAKO,aACLP,KAAKF,OAAOY,uBAAyBV,KAAKO,cAAe,EAAQP,KAAKO,cAAe,OAErF,MAAQP,KAAKF,OAAOa,gBAAgBX,KAAKC,YAQrC,GAPAD,KAAKC,YAEDD,KAAKC,UAAY,IACjBD,KAAKC,UAAY,GAIjBD,KAAKC,YAAcQ,EAAmB,CACtCT,KAAKO,cAAe,EACpB,QAMhBK,SAAU,WACN,OAAQZ,KAAKF,OAAOK,IAAMH,KAAKE,IAAIC,GAAKH,KAAKF,OAAOM,IAAMJ,KAAKE,IAAIE,GAEvES,MAAO,WACHC,IAAmBC,cACnBf,KAAKF,OAAOkB,sBAILrB","file":"static/js/5.84b90880.chunk.js","sourcesContent":["import MazePathController from '../controller/mazeController';\n\nconst dfs = {\n    initialize: function (ctx, walker, mazeConfig) {\n        this.walker = walker;\n        this.direction = 0;\n        // For 10 x 10 maze\n        this.end = {x: mazeConfig.end, y: mazeConfig.end};\n        this.mazeConfig = mazeConfig;\n        this.ctx = ctx;\n        this.visitedStackX = [];\n        this.visitedStackY = [];\n        this.backTracking = false;\n    },\n    step: function() {\n        let startingDirection = this.direction;\n\n        if (this.backTracking) {\n            this.walker.backtrackWithTremaux() ? this.backTracking = false : this.backTracking = true;\n        } else {\n            while (!this.walker.moveWithTremaux(this.direction)) {\n                this.direction++; // Hit a wall, turn right (N => E => S => W)\n                // reset direction\n                if (this.direction > 3) {\n                    this.direction = 0;\n                }\n\n                // We haven't been able to go in any direction, time to backtrack\n                if (this.direction === startingDirection) {\n                    this.backTracking = true;\n                    break;\n                };\n\n            };\n        }\n    },\n    isSolved: function() {\n        return (this.walker.x === this.end.x && this.walker.y === this.end.y);\n    },\n    solve: function () {\n        MazePathController.clearCanvas();\n        this.walker.drawPathFromStack();\n    }\n}\n\nexport default dfs;"],"sourceRoot":""}